services:
  blink_detection_service:
    container_name: blink_detection_service
    build: ./detection_service
    depends_on:
      - mosquitto
    networks:
      - openblink
    volumes:
      - ./videos:/videos
    environment:
      - MQTT_HOST='mosquitto'
    restart: unless-stopped
  devicecapture:
    build:
      context: ./devicecapture
      dockerfile: docker/Dockerfile
    container_name: devicecapture
    networks:
      - openblink
    volumes:
      - ./videos:/videos
    depends_on:
      - mosquitto
      - postgres
    environment:
      - MQTT_HOST='mosquitto'
      - DB_URL='postgres://postgres:postgres@postgres:5432/openblink'
    restart: unless-stopped
  mock_device:
    build:
      context: ./devicecapture
      dockerfile: docker/mockdevice.Dockerfile
    container_name: mock_device
    networks:
      - openblink
    ports:
      - "8080:8080"
    restart: unless-stopped
  mosquitto:
    image: eclipse-mosquitto:2
    container_name: mosquitto
    networks:
      - openblink
    ports:
      - "1883:1883" # Standard MQTT port
      - "9001:9001" # Websocket port for MQTT
    volumes:
      - ./mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - ./mosquitto/data:/mosquitto/data:rw
      - ./mosquitto/log:/mosquitto/log:rw
    restart: unless-stopped
  postgres:
    image: postgres:16-alpine3.22
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    networks:
      - openblink
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./devicecapture/internal/postgres/sql/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./devicecapture/docker/init-databases.sql:/docker-entrypoint-initdb.d/02-init-databases.sql
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
networks:
  openblink:
    driver: bridge
volumes:
  postgres_data: